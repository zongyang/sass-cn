(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{233:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释","aria-hidden":"true"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),a("vp-ad-top"),t._v(" "),a("p",[t._v("Sass注释在SCSS和缩进语法之间有很大的不同。这两种语法都支持两种类型的注释：使用"),a("code",[t._v("/* */")]),t._v("定义的注释(通常编译为CSS)和使用"),a("code",[t._v("//")]),t._v("不编译的注释。")]),t._v(" "),a("h2",{attrs:{id:"scss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scss","aria-hidden":"true"}},[t._v("#")]),t._v(" SCSS")]),t._v(" "),a("p",[t._v("SCSS中的注释与JavaScript等其他语言中的注释工作类似。"),a("strong",[t._v("单行注释")]),t._v("以"),a("code",[t._v("//")]),t._v("开头，一直到行尾。单行注释被称为"),a("strong",[t._v("静默注释")]),t._v("，因为它们不生成任何CSS语句。")]),t._v(" "),a("p",[a("strong",[t._v("多行注释以")]),a("code",[t._v("/*")]),t._v("开头，以下一个"),a("code",[t._v("*/")]),t._v("结尾。如果在允许语句的地方编写了多行注释，则将其编译为CSS注释。他们也被称为"),a("strong",[t._v("显式注释")]),a("em",[t._v("(loud comment)")]),t._v("，与静默注释相呼应。编译到CSS的多行注释可能包含"),a("router-link",{attrs:{to:"/api/Interpolation.html"}},[t._v("插值表达式")]),t._v("，在编译注释之前将对插值表达式进行计算。")],1),t._v(" "),a("p",[t._v("默认情况下，多行注释将在"),a("router-link",{attrs:{to:"/api/CommandLine/Dart.html"}},[t._v("压缩模式")]),t._v("下从已编译的CSS中删除。如果注释以"),a("code",[t._v("/*!")]),t._v("开头，它总是包含在CSS输出中。")],1),t._v(" "),a("el-tabs",{attrs:{type:"border-card"}},[a("el-tab-pane",{attrs:{label:"SCSS"}},[a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个注释不会出现在CSS中")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这个将会出现在CSS中，压缩模式下不会有 */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* CSS中显示插值的计算结果\n * 1 + 1 = #{1 + 1} */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*! 在压缩模式下也会显示 */")]),t._v("\n\np "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 多行注释可以写在任何允许 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 使用空格的地方。 */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".sans ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Helvetica"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单行注释也是")]),t._v("\n        sans-serif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("el-tab-pane",{attrs:{label:"CSS"}},[a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这个将会出现在CSS中，压缩模式下不会有 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* CSS中显示插值的计算结果\n * 1 + 1 = #{1 + 1} */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*! 在压缩模式下也会显示 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p .sans")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Helvetica"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sans-serif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])],1),t._v(" "),a("h2",{attrs:{id:"sass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass","aria-hidden":"true"}},[t._v("#")]),t._v(" SASS")]),t._v(" "),a("p",[t._v("缩进语法中的注释工作方式略有不同：它们是基于缩进的。与SCSS一样，使用"),a("code",[t._v("//")]),t._v("编写的静默注释不生成任何CSS语句，但与SCSS不同的是，在开头"),a("code",[t._v("//")]),t._v("下方缩进的所有内容也会被注释掉。")]),t._v(" "),a("p",[t._v("以"),a("code",[t._v("/·*")]),t._v("开头的缩进语法注释以同样的方式处理缩进，只是它们会被编译为CSS。因为注释的扩展是基于缩进的，所以闭合的"),a("code",[t._v("*/")]),t._v("是可选的。和SCSS一样，"),a("code",[t._v("/*")]),t._v("可以包含"),a("router-link",{attrs:{to:"/api/Interpolation.html"}},[t._v("插值表达式")]),t._v("，并且可以以"),a("code",[t._v("/*!")]),t._v("开头在压缩模式下强制CSS输出注释。")],1),t._v(" "),a("el-tabs",{attrs:{type:"border-card"}},[a("el-tab-pane",{attrs:{label:"Sass"}},[a("div",{staticClass:"language-sass extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sass"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  这个注释不会出现在CSS中\n    这个也被注释掉了")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*  这个将会出现在CSS中，压缩模式下不会有")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*  CSS中显示插值的计算结果\n *  1 + 1 = #{1 + 1}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*! 在压缩模式下也会显示")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p .sans")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property-line"}},[t._v("  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Helvetica, "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 内联注释必须是闭合的 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" sans-serif")]),t._v("\n\n")])])])]),t._v(" "),a("el-tab-pane",{attrs:{label:"CSS"}},[a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这个将会出现在CSS中，压缩模式下不会有 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* CSS中显示插值的计算结果\n * 1 + 1 = #{1 + 1} */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*! 在压缩模式下也会显示 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p .sans")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Helvetica"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sans-serif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])],1),t._v(" "),a("h2",{attrs:{id:"文档注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档注释","aria-hidden":"true"}},[t._v("#")]),t._v(" 文档注释")]),t._v(" "),a("p",[t._v("在使用Sass编写样式库时，可以使用注释来记录库提供[mixin.md/api/AtRules/MixinAndinclude.md)、"),a("router-link",{attrs:{to:"/api/AtRules/Function.html"}},[t._v("函数")]),t._v("、"),a("router-link",{attrs:{to:"/api/Variables.html"}},[t._v("变量")]),t._v("和"),a("router-link",{attrs:{to:"/api/PlaceholderSelectors.html"}},[t._v("占位符选择器")]),t._v("，以及库本身。这些注释由"),a("a",{attrs:{href:"http://sassdoc.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("SassDoc"),a("OutboundLink")],1),t._v("工具读取，生成漂亮的文档。查看"),a("a",{attrs:{href:"http://oddbird.net/susy/docs/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Susy grid engine"),a("OutboundLink")],1),t._v("的文档，以查看它的运行情况!")],1),t._v(" "),a("p",[t._v("文档注释是静默注释，用三个斜杠（"),a("code",[t._v("///")]),t._v("）直接写在文档的正上方。SassDoc将注释中的文本解析为"),a("a",{attrs:{href:"https://www.markdownguide.org/getting-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("Markdown"),a("OutboundLink")],1),t._v("，并支持许多有用的"),a("a",{attrs:{href:"http://sassdoc.com/annotations/",target:"_blank",rel:"noopener noreferrer"}},[t._v("注释（"),a("em",[t._v("annotations")]),t._v("）"),a("OutboundLink")],1),t._v("来详细描述它。")]),t._v(" "),a("el-tabs",{attrs:{type:"border-card"}},[a("el-tab-pane",{attrs:{label:"SCSS"}},[a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Computes an exponent.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param {number} $base")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///   The number to multiply by itself.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param {integer (unitless)} $exponent")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///   The number of `$base`s to multiply together.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @return {number} `$base` to the power of `$exponent`.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$base")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$exponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("through")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token selector"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$exponent")]),t._v(" ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$base")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("el-tab-pane",{attrs:{label:"Sass"}},[a("div",{staticClass:"language-sass extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sass"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Computes an exponent.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param {number} $base")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///   The number to multiply by itself.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param {integer (unitless)} $exponent")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///   The number of `$base`s to multiply together.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @return {number} `$base` to the power of `$exponent`.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@function")]),t._v(" pow($base, $exponent)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable-line"}},[t._v("  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[t._v("  "),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@for")]),t._v(" $_ from 1 through $exponent")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable-line"}},[t._v("    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$base")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[t._v("  "),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@return")]),t._v(" $result")]),t._v("\n\n")])])])])],1)],1)},[],!1,null,null,null);s.default=n.exports}}]);