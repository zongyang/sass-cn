(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{212:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions","aria-hidden":"true"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),a("vp-ad-top"),t._v(" "),a("p",[t._v("兼容性：Dart Sass ✓ "),a("span",{staticClass:"sa-ver-divider"},[t._v("|")]),t._v("LibSass  "),a("Badge",{attrs:{text:"3.5.0+",vertical:"middle"}}),t._v(" "),a("span",{staticClass:"sa-ver-divider"},[t._v("|")]),t._v("Ruby Sass  "),a("Badge",{attrs:{text:"3.5.0+",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[t._v("在旧版本的LibSass和Ruby Sass中，"),a("a",{attrs:{href:"%E5%BE%85%E7%A1%AE%E5%AE%9A"}},[t._v("call()")]),t._v("函数接受一个表示函数名称的字符串。这已更改为采用函数值，以准备新的模块系统，其中的函数不再是全局的，因此给定的名称可能并不总是指向同一个函数。"),a("br"),t._v("\n传递一个字符串在给"),a("code",[t._v("call()")]),t._v("在所有实现中仍然有效，但它已被弃用，并且在未来的版本中将不被允许。")])]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/api/AtRules/Function.html"}},[t._v("函数")]),t._v("也可以是值！不能直接将函数编写为值，但是可以将函数的名称传递给"),a("a",{attrs:{href:""}},[t._v("get-function()")]),t._v("函数以获得值。一旦有了函数值，就可以将它传递给"),a("a",{attrs:{href:"%E5%BE%85%E7%A1%AE%E5%AE%9A"}},[t._v("call()")]),t._v("函数来调用它。这对于编写调用其他函数的"),a("strong",[t._v("高阶函数")]),t._v("很有用。")],1),t._v(" "),a("el-tabs",{attrs:{type:"border-card"}},[a("el-tab-pane",{attrs:{label:"SCSS"}},[a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 返回$list的副本，其中删除了$condition返回`true`的所有元素。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove-where")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$condition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$new-list")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$separator")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("list-separator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@each")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token selector"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$element")]),t._v(" in "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$list")]),t._v(" ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$condition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$element")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$new-list")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$new-list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$element")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$separator")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$separator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$new-list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fonts")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Tahoma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Geneva"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Helvetica Neue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Helvetica"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Arial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sans-serif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("content ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains-helvetica")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("str-index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Helvetica"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove-where")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fonts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get-function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"contains-helvetica"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("el-tab-pane",{attrs:{label:"Sass"}},[a("div",{staticClass:"language-sass extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sass"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 返回$list的副本，其中删除了$condition返回`true`的所有元素。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@function")]),t._v(" remove-where($list, $condition)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable-line"}},[t._v("  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$new-list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ()")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable-line"}},[t._v("  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$separator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" list-separator("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$list")]),t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[t._v("  "),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@each")]),t._v(" $element in $list")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[t._v("    "),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@if")]),t._v(" not call($condition, $element)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable-line"}},[t._v("      "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$new-list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" append("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$new-list")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$element")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$separator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$separator")]),t._v(")")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[t._v("  "),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@return")]),t._v(" $new-list")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token variable-line"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fonts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Tahoma, Geneva, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Helvetica Neue"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(", Helvetica, Arial, sans-serif")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("content")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[t._v("  "),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@function")]),t._v(" contains-helvetica($string)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[t._v("    "),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@return")]),t._v(' str-index($string, "Helvetica")')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token property-line"}},[t._v("  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" remove-where("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fonts")]),t._v(", get-function(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"contains-helvetica"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("))")]),t._v("\n")])])])]),t._v(" "),a("el-tab-pane",{attrs:{label:"CSS"}},[a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Tahoma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Geneva"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Arial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sans-serif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])],1)],1)},[],!1,null,null,null);s.default=e.exports}}]);