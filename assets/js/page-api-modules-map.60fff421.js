(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{257:function(s,t,a){"use strict";a.r(t);var e=a(2),n=Object(e.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"sass-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-map","aria-hidden":"true"}},[s._v("#")]),s._v(" sass:map")]),s._v(" "),a("el-collapse",[a("el-collapse-item",{attrs:{title:"兼容性"}},[a("p",[s._v("Dart Sass "),a("Badge",{attrs:{text:"unreleased",vertical:"middle"}}),s._v(" "),a("span",{staticClass:"sa-ver-divider"},[s._v("|")]),s._v("LibSass  ✗"),a("span",{staticClass:"sa-ver-divider"},[s._v("|")]),s._v("Ruby Sass  ✗")],1),s._v(" "),a("p",[s._v("目前只有Dart Sass支持使用"),a("code",[s._v("@use")]),s._v("加载内置模块。其它的实现用户必须使用全局名称来调用函数。")])])],1),s._v(" "),a("h2",{attrs:{id:"map-get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-get","aria-hidden":"true"}},[s._v("#")]),s._v(" map.get()")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("包含函数：")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("map.get($map, $key)")])]),s._v(" "),a("li",[a("code",[s._v("map-get($map, $key)")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("返回值：")]),s._v(" *")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("用法：")])]),s._v(" "),a("p",[s._v("返回"),a("code",[s._v("$map")]),s._v("中与"),a("code",[s._v("$key")]),s._v("相关联的值。如果找不到与"),a("code",[s._v("$key")]),s._v("相关联的值，则返回"),a("a",{attrs:{href:"/api/Values/Null"}},[s._v("null")]),s._v(" "),a("br")]),s._v(" "),a("el-tabs",{attrs:{type:"border-card"}},[a("el-tab-pane",{attrs:{label:"SCSS"}},[a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 400"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 500"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 700"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@debug")]),s._v(" map."),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 500")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@debug")]),s._v(" map."),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extra-bold"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// null")]),s._v("\n")])])])]),s._v(" "),a("el-tab-pane",{attrs:{label:"Sass"}},[a("div",{staticClass:"language-sass extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sass"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable-line"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" (")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 400, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 500, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 700)")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[s._v("@debug")]),s._v(' map.get($font-weights, "medium")  // 500')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[s._v("@debug")]),s._v(' map.get($font-weights, "extra-bold")  // null')]),s._v("\n")])])])])],1)],1)]),s._v(" "),a("h2",{attrs:{id:"map-has-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-has-key","aria-hidden":"true"}},[s._v("#")]),s._v(" map.has-key()")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("包含函数：")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("map.has($map, $key)")])]),s._v(" "),a("li",[a("code",[s._v("map-has($map, $key)")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("返回值：")]),s._v(" "),a("a",{attrs:{href:"/api/Values/Booleans"}},[s._v("boolean")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("用法：")])]),s._v(" "),a("p",[s._v("判断"),a("code",[s._v("$map")]),s._v("中是否有与"),a("code",[s._v("$key")]),s._v("相关联的值。")]),s._v(" "),a("br"),s._v(" "),a("el-tabs",{attrs:{type:"border-card"}},[a("el-tab-pane",{attrs:{label:"SCSS"}},[a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 400"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 500"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 700"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@debug")]),s._v(" map."),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("has-key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@debug")]),s._v(" map."),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("has-key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bolder"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])])])]),s._v(" "),a("el-tab-pane",{attrs:{label:"Sass"}},[a("div",{staticClass:"language-sass extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sass"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable-line"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" (")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 400, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 500, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 700)")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[s._v("@debug")]),s._v(' map.has-key($font-weights, "regular")  // true')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[s._v("@debug")]),s._v(' map.has-key($font-weights, "bolder")  // false')]),s._v("\n")])])])])],1)],1)]),s._v(" "),a("h2",{attrs:{id:"map-keys"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-keys","aria-hidden":"true"}},[s._v("#")]),s._v(" map.keys()")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("包含函数：")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("map.keys($map)")])]),s._v(" "),a("li",[a("code",[s._v("map-keys($map)")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("返回值：")]),s._v(" "),a("a",{attrs:{href:"/api/Values/Lists"}},[s._v("list")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("用法：")])]),s._v(" "),a("p",[s._v("返回"),a("code",[s._v("$map")]),s._v("中所有的键名，一个以逗号分隔的列表。")]),s._v(" "),a("br"),s._v(" "),a("el-tabs",{attrs:{type:"border-card"}},[a("el-tab-pane",{attrs:{label:"SCSS"}},[a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 400"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 500"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 700"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@debug")]),s._v(" map."),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "regular", "medium", "bold"')]),s._v("\n")])])])]),s._v(" "),a("el-tab-pane",{attrs:{label:"Sass"}},[a("div",{staticClass:"language-sass extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sass"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable-line"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" (")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 400, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 500, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 700)")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[s._v("@debug")]),s._v(' map.keys($font-weights)  // "regular", "medium", "bold"')]),s._v("\n")])])])])],1)],1)]),s._v(" "),a("h2",{attrs:{id:"map-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-merge","aria-hidden":"true"}},[s._v("#")]),s._v(" map.merge()")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("包含函数：")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("map.merge($map1, $map2)")])]),s._v(" "),a("li",[a("code",[s._v("map-merge($map1, $map2)")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("返回值：")]),s._v(" "),a("a",{attrs:{href:"/api/Values/Maps"}},[s._v("map")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("用法：")])]),s._v(" "),a("p",[s._v("返回一个包含"),a("code",[s._v("$map1,$map2")]),s._v("所有键和值的新映射。")]),s._v(" "),a("p",[s._v("可以通过"),a("code",[s._v("$map2")]),s._v("传递过来的键值对新增或重写"),a("code",[s._v("$map1")]),s._v("中的值。")]),s._v(" "),a("p",[s._v("如果"),a("code",[s._v("$map1")]),s._v("和"),a("code",[s._v("$map2")]),s._v("具有相同的键，则"),a("code",[s._v("$map2")]),s._v("的值优先。")]),s._v(" "),a("p",[s._v("新映射中键名顺序按如下规则，"),a("code",[s._v("$map1")]),s._v("中的键名按原顺序排列，"),a("code",[s._v("$map2")]),s._v("中的键名紧随其后。\n"),a("br")]),s._v(" "),a("el-tabs",{attrs:{type:"border-card"}},[a("el-tab-pane",{attrs:{label:"SCSS"}},[a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$light-weights")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lightest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"light"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 300"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$heavy-weights")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 500"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 700"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@debug")]),s._v(" map."),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("merge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$light-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$heavy-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// (")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "lightest": 100,')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "light": 300,')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "medium": 500,')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "bold": 700')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// )")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// map.merge() can be used to add a single key/value pair to a map.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@debug")]),s._v(" map."),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("merge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$light-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lighter"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 200"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ("lightest": 100, "light": 300, "lighter": 200)')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// It can also be used to overwrite a value in a map.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@debug")]),s._v(" map."),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("merge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$light-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"light"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 200"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ("lightest": 100, "light": 200)')]),s._v("\n")])])])]),s._v(" "),a("el-tab-pane",{attrs:{label:"Sass"}},[a("div",{staticClass:"language-sass extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sass"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable-line"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$light-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" (")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lightest"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 100, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"light"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 300)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token variable-line"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$heavy-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" (")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 500, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 700)")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[s._v("@debug")]),s._v(" map.merge($light-weights, $heavy-weights)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// (")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "lightest": 100,')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "light": 300,')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "medium": 500,')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "bold": 700')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// )")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// map.merge() can be used to add a single key/value pair to a map.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[s._v("@debug")]),s._v(' map.merge($light-weights, ("lighter": 200))')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ("lightest": 100, "light": 300, "lighter": 200)')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// It can also be used to overwrite a value in a map.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[s._v("@debug")]),s._v(' map.merge($light-weights, ("light": 200))')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ("lightest": 100, "light": 200)')]),s._v("\n")])])])])],1)],1)]),s._v(" "),a("h2",{attrs:{id:"map-remove"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-remove","aria-hidden":"true"}},[s._v("#")]),s._v(" map.remove()")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("包含函数：")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("map.remove($map, $keys...)")])]),s._v(" "),a("li",[a("code",[s._v("map-remove($map, $keys...)")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("返回值：")]),s._v(" "),a("a",{attrs:{href:"/api/Values/Maps"}},[s._v("map")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("用法：")])]),s._v(" "),a("p",[s._v("返回一个没有任何与"),a("code",[s._v("$keys")]),s._v("关联的值的"),a("code",[s._v("$map")]),s._v("副本。如果"),a("code",[s._v("$keys")]),s._v("中的键在"),a("code",[s._v("$map")]),s._v("中没有关联的值，则忽略它。")]),s._v(" "),a("br"),s._v(" "),a("el-tabs",{attrs:{type:"border-card"}},[a("el-tab-pane",{attrs:{label:"SCSS"}},[a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 400"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 500"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 700"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@debug")]),s._v(" map."),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ("medium": 500, "bold": 700)')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@debug")]),s._v(" map."),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ("medium": 500)')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@debug")]),s._v(" map."),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bolder"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ("regular": 400, "medium": 500, "bold": 700)')]),s._v("\n")])])])]),s._v(" "),a("el-tab-pane",{attrs:{label:"Sass"}},[a("div",{staticClass:"language-sass extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sass"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable-line"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" (")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 400, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 500, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 700)")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[s._v("@debug")]),s._v(' map.remove($font-weights, "regular")  // ("medium": 500, "bold": 700)')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[s._v("@debug")]),s._v(' map.remove($font-weights, "regular", "bold")  // ("medium": 500)')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[s._v("@debug")]),s._v(' map.remove($font-weights, "bolder")')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ("regular": 400, "medium": 500, "bold": 700)')]),s._v("\n")])])])])],1)],1)]),s._v(" "),a("h2",{attrs:{id:"map-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-values","aria-hidden":"true"}},[s._v("#")]),s._v(" map.values()")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("包含函数：")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("map.values($map)")])]),s._v(" "),a("li",[a("code",[s._v("map-values($map)")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("返回值：")]),s._v(" "),a("a",{attrs:{href:"/api/Values/Lists"}},[s._v("list")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("用法：")])]),s._v(" "),a("p",[s._v("返回"),a("code",[s._v("$map")]),s._v("中所有的值，一个以逗号分隔的列表。")]),s._v(" "),a("br"),s._v(" "),a("el-tabs",{attrs:{type:"border-card"}},[a("el-tab-pane",{attrs:{label:"SCSS"}},[a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 400"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 500"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 700"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@debug")]),s._v(" map."),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 400, 500, 700")]),s._v("\n")])])])]),s._v(" "),a("el-tab-pane",{attrs:{label:"Sass"}},[a("div",{staticClass:"language-sass extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sass"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable-line"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$font-weights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" (")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regular"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 400, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 500, ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bold"')]),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(": 700)")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token atrule-line"}},[a("span",{pre:!0,attrs:{class:"token atrule"}},[s._v("@debug")]),s._v(" map.values($font-weights)  // 400, 500, 700")]),s._v("\n")])])])])],1)],1)])],1)},[],!1,null,null,null);t.default=n.exports}}]);