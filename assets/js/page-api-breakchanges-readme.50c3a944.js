(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{228:function(a,s,t){"use strict";t.r(s);var r=t(2),e=Object(r.a)({},function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),t("vp-ad-top"),a._v(" "),t("p",[a._v("Sass的新版本尽可能地向后兼容，但有时需要进行突破性的更改。Sass需要跟上不断发展的CSS规范，旧的语言设计错误偶尔需要修正。")]),a._v(" "),t("p",[a._v("在发布每个更改之前，Sass实现将为其行为将发生更改的样式表生成弃用警告。只要有可能，这些警告将包括如何更新已弃用的样式以使其向前兼容的建议。")]),a._v(" "),t("p",[a._v("不同的实现有不同的策略来应对更改和弃用。"),t("a",{attrs:{href:"https://sass-lang.com/dart-sass",target:"_blank",rel:"noopener noreferrer"}},[a._v("Dart Sass"),t("OutboundLink")],1),a._v("在发布一个更改之前，至少会在三个月内发出弃用警告，并且会使用一个新的主版本号来发布更改，除非该更改对于CSS兼容性是必需的。CSS兼容性的变化通常是无干扰的和时间敏感的，所以它们可以用新的次要版本号代替。")]),a._v(" "),t("p",[a._v("这些突破性的变化即将或最近已经发布：")]),a._v(" "),t("ul",[t("li",[a._v("在Dart Sass 1.0.0和Ruby Sass 4.0.0中不能"),t("a",{attrs:{href:"/api/BreakChanges/CompoundSelectors"}},[a._v("扩展复合选择器")]),a._v("。")]),a._v(" "),t("li",[a._v("在Dart Sass 1.0.0、LibSass 3.5.0和Ruby Sass 3.5.0中更改了"),t("a",{attrs:{href:"/api/BreakChanges/VariableSyntax"}},[a._v("CSS自定义属性值的语法")]),a._v("。")])])],1)},[],!1,null,null,null);s.default=e.exports}}]);